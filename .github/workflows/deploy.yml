name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Node.js setup and build steps
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18' 

    - name: Install dependencies (Node.js)
      run: npm install
      working-directory: ./bulletproof-nodejs-ddd
      
    - name: Install Mocha
      run: npm install mocha
      working-directory: ./bulletproof-nodejs-ddd

    - name: Run tests (Node.js)
      run: npm test
      working-directory: ./bulletproof-nodejs-ddd

    - name: Build (Node.js)
      run: npm run build 
      working-directory: ./bulletproof-nodejs-ddd

    # ASP.NET Core setup and build steps
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0' # Specify your .NET Core version here

    - name: Install dependencies (ASP.NET Core)
      run: dotnet restore "./AspNET CORE WEBAPI/RobDroneAndGOAuth/RobDroneAndGOAuth.csproj"
      
    - name: Run tests (ASP.NET Core)
      run: dotnet test "./AspNET CORE WEBAPI/RobDroneAndGOAuth/" 
      
    - name: Build (ASP.NET Core)
      run: dotnet build "./AspNET CORE WEBAPI/RobDroneAndGOAuth/RobDroneAndGOAuth.csproj" --configuration Release

    - name: Publish (ASP.NET Core)
      run: dotnet publish "./AspNET CORE WEBAPI/RobDroneAndGOAuth/RobDroneAndGOAuth.csproj" -c Release -o "./AspNET CORE WEBAPI/RobDroneAndGOAuth/published"
    
    # Deployment steps for Node.js
    - name: Deploy Node.js to VPS
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ARGS: "-avzr --delete"
        SOURCE: "bulletproof-nodejs-ddd/build/"
        REMOTE_HOST: ${{ secrets.HOST }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        REMOTE_PORT: ${{ secrets.PORT }}
        TARGET: "/root/bulletproof-nodejs-ddd"

    # Deployment steps for ASP.NET Core
    - name: Deploy ASP.NET Core to VPS
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ARGS: "-avzr --delete"
        SOURCE: "AspNET CORE WEBAPI/RobDroneAndGOAuth/published/"
        REMOTE_HOST: ${{ secrets.HOST }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        REMOTE_PORT: ${{ secrets.PORT }}
        TARGET: "/root/RobDroneAndGOAuth"

    # Setting up Node.js as a systemd service
    - name: Create systemd service file for Node.js
      run: |
        echo "[Unit]" > nodeapp.service
        echo "Description=Node.js Application" >> nodeapp.service
        echo "" >> nodeapp.service
        echo "[Service]" >> nodeapp.service
        echo "WorkingDirectory=/root/bulletproof-nodejs-ddd" >> nodeapp.service
        echo "ExecStart=/usr/bin/node /root/bulletproof-nodejs-ddd/build/app.js" >> nodeapp.service
        echo "Restart=always" >> nodeapp.service
        echo "RestartSec=10" >> nodeapp.service
        echo "SyslogIdentifier=nodejs-app" >> nodeapp.service
        echo "User=root" >> nodeapp.service
        echo "Environment=NODE_ENV=production" >> nodeapp.service
        echo "" >> nodeapp.service
        echo "[Install]" >> nodeapp.service
        echo "WantedBy=multi-user.target" >> nodeapp.service

    - name: Transfer systemd service file for Node.js to VPS
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ARGS: "-avzr --delete"
        SOURCE: "nodeapp.service"
        REMOTE_HOST: ${{ secrets.HOST }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        REMOTE_PORT: ${{ secrets.PORT }}
        TARGET: "/etc/systemd/system/"

    - name: Enable and start systemd service for Node.js
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          sudo systemctl daemon-reload
          sudo systemctl enable nodeapp.service
          sudo systemctl start nodeapp.service

    # Setting up ASP.NET Core as a systemd service
    - name: Create systemd service file for ASP.NET Core
      run: |
        echo "[Unit]" > aspnetcoreapp.service
        echo "Description=ASP.NET Core Web API" >> aspnetcoreapp.service
        echo "" >> aspnetcoreapp.service
        echo "[Service]" >> aspnetcoreapp.service
        echo "WorkingDirectory=/root/RobDroneAndGOAuth" >> aspnetcoreapp.service
        echo "ExecStart=/usr/bin/dotnet /root/RobDroneAndGOAuth/RobDroneAndGOAuth.dll" >> aspnetcoreapp.service
        echo "Restart=always" >> aspnetcoreapp.service
        echo "RestartSec=10" >> aspnetcoreapp.service
        echo "SyslogIdentifier=dotnet-aspnetcoreapp" >> aspnetcoreapp.service
        echo "User=root" >> aspnetcoreapp.service
        echo "Environment=ASPNETCORE_ENVIRONMENT=Production" >> aspnetcoreapp.service
        echo "" >> aspnetcoreapp.service
        echo "[Install]" >> aspnetcoreapp.service
        echo "WantedBy=multi-user.target" >> aspnetcoreapp.service

    - name: Transfer systemd service file for ASP.NET Core to VPS
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ARGS: "-avzr --delete"
        SOURCE: "aspnetcoreapp.service"
        REMOTE_HOST: ${{ secrets.HOST }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        REMOTE_PORT: ${{ secrets.PORT }}
        TARGET: "/etc/systemd/system/"

    - name: Enable and start systemd service for ASP.NET Core
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          sudo systemctl daemon-reload
          sudo systemctl enable aspnetcoreapp.service
          sudo systemctl start aspnetcoreapp.service
